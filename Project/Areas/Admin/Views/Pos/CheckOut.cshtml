@model Project.Areas.Admin.Models.PosViewModel
@*@using Project.HtmlHelpers*@
@{
    ViewBag.Title = "Record Sales";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.IsGreetings = "true";
}
@section Crumbs{
    <div class="crumbs">
        <ul class="breadcrumb" id="breadcrumbs">
            <li> <i class="icon-home"></i> <a href="@Url.Action("Index", "Dashboard", new { area="Admin"})">Dashboard</a> </li>
            <li class="current"> <a title="" href="javascript: return void(0)"></a>Record Sales </li>
        </ul>
    </div>
}
@section Scripts{
    @Scripts.Render("~/Content/Backend/plugins/jquery-ui/jquery-ui-1.10.2.custom.min.js")
    <link href="@Url.Content("~/Content/Backend/Custom/gritter/css/jquery.gritter.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/Backend/themes/base/jquery.ui.all.css")" rel="stylesheet" />
    <script>
        "use strict";
        function getProduct(e) {
            var ProductID = $(e).val();
            console.log(ProductID);
            // Now execute the command using jQuery ajax.
            var currentRequest = null;

            var currentRequest = $.ajax({
               url: '@Url.Action("GetProduct", "Pos")',

                dataType: 'json',
                type: 'GET',
                data: { Id: ProductID },
                beforeSend: function () {
                    if (currentRequest != null) {
                        currentRequest.abort();
                        $('#prodcutInfo').hide();
                    }
                },
                success: function (msg) {
                    console.log(msg)
                    $("#product_ActualPrice").val(msg.UnitPrice);
                    $("#product_DiscountPrice").val(msg.UnitDiscountPrice);
                    $("#product_ProductImage").val(msg.ProductImage);
                    $("#img").attr('src', '/../Content/Backend/SAKDocument/Photo/' + msg.ProductImage);
                    $('#prodcutInfo').show();
                },
                error: function (errmsg) {

                    console.log(errmsg);
                }
            });
        }


     function GetProduct(e) {
            getProduct(e);

     }

     var x = $("#product_Id").val();

     if (x == "") {
         $('#prodcutInfo').hide();

     }
     else if (x != "") {
         $('#prodcutInfo').show();

     }


        $(document).ready(function () {
            $(".datepicker-issueddate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: false,
                maxDate: new Date(),
                appendText: '<span class="help-block">(yyyy-mm-dd)</span>',
                dateFormat: "yy-mm-dd"
            });
        });


        function GetType(ctrl) {
            var x = $("#paymentForm_PaymentTypeId").val();

            if (x == "") {
                $('#pay').hide();
                $('#orderdesc').hide();
                $('#wf-action-btn').hide();

            }

            if (x == "3") {
                $('#pay').hide();
                $('#orderdesc').show();
                $('#wf-action-btn').show();

            }
            else if (x == "4" || x=="6") {
                $('#pay').hide();
                $('#orderdesc').show();
                $('#wf-action-btn').show();

            }
            else if (x == "5") {
                $('#pay').show();
                $('#orderdesc').show();
                $('#wf-action-btn').show();

            }
            else if (x == "1") {
                $('#pay').hide();
                $('#orderdesc').show();
                $('#wf-action-btn').show();

            }
            
        }
    </script>





}


<div class="row">
    <div class="col-md-12">
        <div class="widget">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                   <strong style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:crimson;font-size:large;"> Customer account balance is ₦@String.Format("{0:n0}", Model.CurrentBalance) </strong>
                </h4>
            </div>
            <div class="widget-content">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr style="font-size: 12px;">
                            <th>S/N</th>
                            <th>Name</th>
                            <th>Mobile No</th>
                            <th>Modified By</th>
                            <th>Modified Date</th>
                            <th>Is Deleted</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr style="font-size: 12px;">
                            <td>
                                1
                            </td>
                            <td>@Model.Customer.Name</td>
                            <td>@Model.Customer.MobileNo</td>

                            <td>@Model.Customer.ModifiedBy</td>
                            <td>@Model.Customer.ModifiedDate</td>
                            <td>
                                @if (Model.Customer.IsDeleted == true)
                                {
                                    <span class="label label-danger">Yes</span>
                                }
                                else
                                {
                                    <span class="label label-success">No</span>
                                }
                            </td>


                        </tr>


                    </tbody>
                </table>
            </div>


        </div>
    </div>
</div>

    <div class="PermitView">
        <div class="col-md-8">


            <div class="widget">
                <div class="widget-header">
                    <h4><i class="icon-reorder"></i>Product Information  <a href="@Url.Action("Index", "Customer", new {area="Setup"})" class="btn btn-xs btn-warning">Back</a>  <a href="@Url.Action("CustomerTransaction", "Customer", new {Id=Model.Customer.Id,area="Setup"})" class="btn btn-xs btn-danger">Source Account</a> </h4>
                    <div class="toolbar">
                        <div class="btn-group"><span class="btn btn-xs widget-collapse"><i class="icon-angle-down"></i></span></div>
                    </div>
                </div>
                <div class="widget-content">
                    @using (Html.BeginForm("RecordSales", "Pos", FormMethod.Post, new {Id=Model.Customer.Id, TransId=Model.TransId, @class = "form-horizontal row-border" }))
                    {

                        <div class="form-group">
                            @Html.Label("Product name", new { @class = "col-md-4 control-label" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(m => Model.product.Id, new SelectList(Model.ProductList, "Value", "Text"), "Select a Product", new { @class = "form-control", onChange = "GetProduct(this)" })
                                <span style="color:red"> @Html.ValidationMessageFor(m => Model.product.Id)</span>
                                @Html.HiddenFor(x => x.Customer.Id)
                                @Html.HiddenFor(x => x.TransId)
                            </div>
                        </div>

                        <div id="prodcutInfo">

                            <div class="form-group">
                                @Html.Label("Unit Price ₦", new { @class = "col-md-4 control-label" })
                                <div class="col-md-5">

                                    @Html.TextBoxFor(m => m.product.ActualPrice, null, new { @class = "form-control", @readonly = true })

                                    <span style="color:red">  @Html.ValidationMessageFor(m => m.product.ActualPrice)</span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Discount Price ₦", new { @class = "col-md-4 control-label" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(m => Model.product.DiscountPrice, null, new { @class = "form-control", @readonly = true })

                                    <span style="color:red">  @Html.ValidationMessageFor(m => Model.product.DiscountPrice)</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Product Image", new { @class = "col-md-4 control-label" })
                                <div class="col-md-5">
                                    <img src="" alt="Image" id="img" width="150" height="150" />

                                </div>
                            </div>



                            <div class="form-group">
                                @Html.Label("Quantity", new { @class = "col-md-4 control-label" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(m => Model.Quantity, null, new { @class = "form-control" })
                                    <span style="color:red">  @Html.ValidationMessageFor(m => Model.Quantity)</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Use Discount Price", new { @class = "col-md-4 control-label" })
                                <div class="col-md-5">
                                    @Html.CheckBoxFor(m => Model.HasDiscount)
                                    <span style="color:red">  @Html.ValidationMessageFor(m => Model.HasDiscount)</span>
                                </div>
                            </div>

                            <div class="form-actions">
                                <input type="submit" class="btn btn-warning pull-right" value="Add to cart" />
                            </div>

                        </div>
                    }
                </div>

            </div>

            <div class="widget">
                <div class="widget-header">
                    <h4><i class="icon-reorder"></i>Shopping Cart</h4>
                    <div class="toolbar">
                        <div class="btn-group"><span class="btn btn-xs widget-collapse"><i class="icon-angle-down"></i></span></div>
                    </div>
                </div>
                <div class="widget-content">
                    @Html.HiddenFor(x => x.Customer.Id)
                    @Html.HiddenFor(x => x.TransId)
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Prdouct Name</th>
                                <th>Qty</th>
                                <th>Unit Price</th>
                                <th>Total Price</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="guarantor-table">
                            @if (Model.ShoppingCartList.Count > 0)
                            {
                                int i = 1;
                                foreach (var g in Model.ShoppingCartList)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@g.Product.Name</td>
                                        <td>@g.Quality</td>
                                        <td>
                                            ₦@String.Format("{0:n0}", g.Price)
                                        </td>
                                        <td>  ₦@String.Format("{0:n0}", g.TotalPrice)</td>
                                        <td>
                                            @Html.ActionLink("Remove", "RemoveProduct", new { Id = Model.Customer.Id, shoppingId = g.Id, TransId = Model.TransId }, new { @class = "btn btn-xs btn-danger", onclick = " return DeleteConfirm()" })
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="99">No Record found!</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

            </div>


        </div>

        @if (Model.paymentForm.TotalAmount == 0)
        {
        }
        else
        {
            <div class="col-md-4">
                <div class="widget">
                    <div class="widget-header">
                        <h4><i class="icon-reorder"></i>Payment Pane</h4>
                        <div class="toolbar">
                            <div class="btn-group"><span class="btn btn-xs widget-collapse"><i class="icon-angle-down"></i></span></div>
                        </div>
                    </div>
                    <div class="widget-content">
                        <div class="list-group">
                            <form method="post" action="@Url.Action("MakePayment", "Pos")" id="wf-action-form">
                                <li class="list-group-item">

                                    <div class="row" style="padding: 0 5px">


                                        <div class="form-group">
                                            @Html.Label("Total Amount ₦")
                                            @Html.DisplayFor(x => Model.paymentForm.TotalAmount)
                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Select Payment Type")
                                            @Html.DropDownListFor(m => Model.paymentForm.PaymentTypeId, new SelectList(Model.PaymentTypeList, "Value", "Text"), "Choose One", new { @class = "form-control", onchange = "return GetType(this);" })
                                            @Html.ValidationMessageFor(x => x.paymentForm.PaymentTypeId, null, new { @style = "color:red" })
                                        </div>
                                        <div id="pay">

                                            <div class="form-group">
                                                <div id="payment">
                                                    @Html.Label("Amount Paid ₦")
                                                    @Html.TextBoxFor(m => Model.paymentForm.AmountPaid, null, new { @class = "form-control" })
                                                    @Html.HiddenFor(x => x.Customer.Id)
                                                    @Html.HiddenFor(x => x.TransId)
                                                    @Html.HiddenFor(x => x.paymentForm.TotalAmount)
                                                </div>
                                            </div>

                                        </div>

                                        <div id="orderdesc">

                                            <div class="form-group">
                                                <div id="payment">
                                                    @Html.Label("Order Description")
                                                    @Html.TextBoxFor(m => Model.paymentForm.OrderDescription, null, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(x => x.paymentForm.OrderDescription, null, new { @style = "color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Truck", new { @class = "col-md-4 control-label" })

                                                @Html.DropDownListFor(m => Model.paymentForm.TruckId, new SelectList(Model.TruckList, "Value", "Text"), "Select a Truck", new { @class = "form-control" })
                                                
                                                @Html.ValidationMessageFor(x => x.paymentForm.TruckId, null, new { @style = "color:red" })

                                            </div>

                                        </div>
                                        <div class="form-group">

                                            <input type="submit" value="Submit" onclick="return ConfirmOrder()" class="btn btn-warning" id="wf-action-btn" />
                                        </div>
                                    </div>
                                </li>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>






<script>
    function DeleteConfirm() {
        if (confirm("Are you sure want to remove this Category from you Store?"))
            return true;
        else
            return false;
    }

</script>


