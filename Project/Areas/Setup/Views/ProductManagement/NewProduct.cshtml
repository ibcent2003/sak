@model Project.Areas.Setup.Models.ProductManagementViewModel
@{
    ViewBag.Title =" New Product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.IsGreetings = "true";
}

@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li><i class="icon-home"></i><a href="@Url.Action("Index", "Home", new { area = "Admin" })">Dashboard</a> </li>
            <li><i class="current"></i><a href="javascript: return void(0)"> New Product</a> </li>


        </ul>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4><i class="icon-reorder"></i>New Products :</h4> <h4 style="color:red">  Please note fileds with red * is required. </h4>
            </div>
            <div class="widget-content">
                @using (Html.BeginForm("NewProduct", "ProductManagement", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal row-border" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()


                    <div class="form-group">
                        @Html.Label("Product Type", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Productform.RawMaterialId, new SelectList(Model.ProductTypeList, "Value", "Text"), "select One", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.RawMaterialId, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Product Name", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.Productform.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.Name, null, new { @style = "color:red" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("Discount Price", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.Productform.DiscountPrice, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.DiscountPrice, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Actual Price", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.Productform.AcutalPrice, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.AcutalPrice, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Quantity", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.Productform.Quantity, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.Quantity, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Re-order Level", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.Productform.ReorderLevel, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.ReorderLevel, null, new { @style = "color:red" })
                        </div>
                    </div>





                    <div class="form-group">
                        @Html.Label("Photo 1", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(x => Model.Productform.Photo1, new { type = "file", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Productform.Photo1, null, new { @style = "color:red" })
                        </div>
                    </div>

                

                    <div class="form-group">
                        @Html.Label("Photo 2", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(x => Model.Productform.Photo2, new { type = "file", @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Productform.Photo2, null, new { @style = "color:red" })*@
                        </div>
                    </div>







                    <div class="form-group">
                        @Html.Label("Description", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(x => Model.Productform.Description, new { @class = "col-md-10 form-control" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Is Deleted?", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.CheckBoxFor(m => m.Productform.IsDeleted)
                        </div>
                    </div>

                    <div class="form-actions">
                        <a href="@Url.Action("Index", "ProductManagement", new {area="Setup"})" class="btn btn-success btn-xs"><< Back to List </a>
                        <input type="submit" class="btn btn-warning btn-xs pull-right" value="Save" />
                    </div>
                }
            </div>

        </div>
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/Content/Backend/plugins/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/tabletools/TableTools.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/colvis/ColVis.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/DT_bootstrap.js")
    @Scripts.Render("~/Content/Backend/plugins/jquery-ui/jquery-ui-1.10.2.custom.min.js")
    @Scripts.Render("~/Content/Backend/vendors/tinymce/tinymce.min.js")
    <script>
        "use strict";
        $(document).ready(function () {
            $(".datepicker-issueddate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: false,
                maxDate: new Date(),
                appendText: '<span class="help-block">(yyyy-mm-dd)</span>',
                dateFormat: "yy-mm-dd"
            });

        });
       
        tinymce.init({
            selector: "textarea",
            mode: "exact",
            elements: "Productform_Description",
            theme: "modern",




            plugins: [
                "advlist autolink lists link image charmap print preview hr anchor pagebreak",
                "searchreplace wordcount visualblocks visualchars code fullscreen",
                "insertdatetime media nonbreaking save table contextmenu directionality",
                "emoticons template paste textcolor "
            ],
            toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
            toolbar2: "print preview media | forecolor backcolor emoticons",
            image_advtab: true,
            templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
            ]
        });
    </script>
}
<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>


