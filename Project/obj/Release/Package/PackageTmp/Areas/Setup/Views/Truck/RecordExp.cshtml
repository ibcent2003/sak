@model Project.Areas.Setup.Models.TruckViewModel
@using Project.HtmlHelpers
@{
    ViewBag.Title = "New Expenses";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.IsGreetings = "true";
}
@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li> <i class="icon-home"></i> <a href="@Url.Action("Index", "Dashboard", new { area="Admin"})">Dashboard</a> </li>
            <li class="current"> <a title="" href="javascript: return void(0)"></a>Create Expenses</li>
        </ul>
    </div>
}

<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="widget-header">
            <h4>
                <i class="icon-reorder"></i>
                Truck Information @Html.ActionLink("Back", "TruckList", null, new { @class = "btn btn-danger btn-xs", @style = "color:white;float:right" })
            </h4>
        </div>
        <br />
        <div class="widget-content">
            <table class="table table-striped table-bordered table-hover ">
                <thead>
                    <tr style="font-size: 12px;">
                        <th>S/N</th>
                        <th>Name</th>
                        <th>Number</th>
                        <th>Photo</th>
                        <th>Expenses For</th>
                        <th>Opening Balance</th>
                        <th>Is Ended?</th>


                    </tr>
                </thead>
                <tbody>

                    <tr style="font-size: 12px;">
                        <td>
                            1
                        </td>
                        <td>
                            @Model.truck.Name
                        </td>

                        <td>@Model.truck.Number</td>
                        <td><img src="@Url.Action("DocumentsUploadedPath", new { Path=(Model.FullPhotoPath) + Model.truck.Photo})" height="50" width="50" style="border:solid" </td>
                        <td>@Model.Expensestype.ExpMonth</td>
                        <td> ₦@String.Format("{0:n0}", Model.Expensestype.OpenBalance)</td>
                        <td>

                            @if (Model.Expensestype.IsEnded == true)
                            {
                                <span class="label label-danger">Yes</span>
                            }
                            else
                            {
                                <span class="label label-success">No</span>
                            }
                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                    Expenses for @Model.Expensestype.ExpMonth
                    @if (Model.Expensestype.IsEnded == true)
                    {

                    }
                    else
                    {

                        <a data-toggle="modal" href="#myModal1" class="btn btn-xs btn-info">New Expenses</a>
                        
                       @Html.ActionLink("End Expenses", "EndExpenses", new { Id = Model.Expensestype.Id }, new { @class = "btn btn-danger btn-xs", onclick = "return EndExpenses()" })
                    }

                </h4>
                <div class="modal fade" id="myModal1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            @using (Html.BeginForm("RecordNewExp", "Truck", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal row-border" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(x => x.truck.Id)
                                @Html.HiddenFor(x => x.Expensestype.Id)
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <h4 class="modal-title">New Expenses</h4>
                                </div>

                                <div class="modal-body">

                                    <div class="form-group">
                                        @Html.Label("Description", new { @class = "col-md-3 control-label" })
                                        <div class="col-md-6">
                                            @Html.TextAreaFor(m => m.expenserecordForm.Description, new { @class = "form-control" })                                          
                                            @Html.ValidationMessageFor(model => model.expenserecordForm.Description)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.Label("Debit", new { @class = "col-md-3 control-label" })
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.expenserecordForm.Debit, new { @class = "form-control" })
                                           
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.Label("Credit", new { @class = "col-md-3 control-label" })
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.expenserecordForm.Credit, new { @class = "form-control" })
                                           
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.Label("Total Balance", new { @class = "col-md-3 control-label" })
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.expenserecordForm.TotalBalance, new { @class = "form-control",@readonly=true })
                                            @Html.ValidationMessageFor(model => model.expenserecordForm.TotalBalance)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.Label("Expenses Date", new { @class = "col-md-3 control-label" })
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.expenserecordForm.ExpensesDate, new { @class = "form-control datepicker-expirydate"})
                                            @Html.ValidationMessageFor(model => model.expenserecordForm.ExpensesDate, null, new { @style = "color:red" })
                                        </div>
                                    </div>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    <input type="submit" class="btn btn-primary" value="Save Changes" />
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="widget-content">
                <table class="table table-striped table-bordered table-hover table-checkable datatable dataTable">
                    <thead>
                        <tr style="font-size: 12px;">
                            <th>S/N</th>
                            <th>Description</th>
                            <th>Debit</th>
                            <th>Credit</th>
                            <th>Balance</th>
                            <th>Date</th>

                           

                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ExpensesList.Count != 0)
                        {
                            int i = 0;
                            foreach (var item in Model.ExpensesList)
                            {
                                ++i;
                                <tr style="font-size: 12px;">
                                    <td>
                                        @i
                                    </td>
                                    <td>@item.Description</td>

                                    <td> ₦@String.Format("{0:n0}", item.Debit)</td>

                                    <td> ₦@String.Format("{0:n0}", item.Credit)</td>


                                    <td> ₦@String.Format("{0:n0}", item.TotalBalance)</td>
                                    <td>
                                        @item.ExpensesDate.ToShortDateString()
                                    </td>
                                    @*<td>
                                        @Html.ActionLink("Edit", "EditRecordExp", new { Id = item.Id }, new { @class = "btn btn-xs btn-success" })
                                    </td>*@

                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8">No Records Found!...</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/Content/Backend/plugins/jquery-ui/jquery-ui-1.10.2.custom.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/tabletools/TableTools.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/colvis/ColVis.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/DT_bootstrap.js")
    <script>
        "use strict";

        function EndExpenses() {
            if (confirm("Are you sure you want to end this expense?"))
                return true;
            else
                return false;
        }

        $(document).ready(function () {
            $(".datepicker-issueddate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: true,
                dateFormat: "yy-mm-dd",
                maxDate: '+0D',
                changeYear: true,
                changeMonth: true, yearRange: "-100:-0"
            });

        });

        $(document).ready(function () {
            $(".datepicker-expirydate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: true,
                dateFormat: "yy-mm-dd",
                //maxDate: '+0D',
                changeYear: true,
                changeMonth: true

            });
        });

    </script>
}

